<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://localhost:1313/</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 01 Jun 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>404 - Page not found</title>
      <link>http://localhost:1313/404/</link>
      <pubDate>Mon, 01 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/404/</guid>
      <description></description>
    </item>
    
    <item>
      <title>New Barricade.io Site Launched</title>
      <link>http://localhost:1313/new-barricade-site-lauched/</link>
      <pubDate>Wed, 01 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/new-barricade-site-lauched/</guid>
      <description>&lt;p&gt;Our new site is live! &lt;a href=&#34;https://barricade.io&#34;&gt;Check it out at Barricade.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;{{ baseurl . }}src/img/changelog/new-site-01.png&#34; alt=&#34;{{ baseurl . }}src/img/changelog/new-site-01.png&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Web App Attacks</title>
      <link>http://localhost:1313/security-guide/creating-account/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/security-guide/creating-account/</guid>
      <description>

&lt;p&gt;A web application attack is any technique that&amp;rsquo;s used to target websites, web applications and web services with malicious intent.&lt;/p&gt;

&lt;p&gt;Barricade monitors for a variety of Web Application Attacks on your app server - suspicious activity is examined in real-time and Alerts are sent if a legitimate attack is detected.&lt;/p&gt;

&lt;h2 id=&#34;causes:6d4e9e6b78bce2650cc52d867108cb51&#34;&gt;Causes&lt;/h2&gt;

&lt;p&gt;Most web application attacks are form-based; attackers will often evaluate web forms as potential gateways as they seek out vulnerable systems to access. Barricade monitors this type of network traffic closely for any suspicious behavioural patterns.&lt;/p&gt;

&lt;p&gt;Our engine can detect many different types of web application attack, and notifies you if a serious threat is found. Types of web application attacks can include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#sql-injection&#34;&gt;SQL Injection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#xss&#34;&gt;Cross Site Scripting (XSS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Broken Authentication and Session ManagementInsecure Direct Object References&lt;/li&gt;
&lt;li&gt;Security Misconfiguration&lt;/li&gt;
&lt;li&gt;Sensitive Data Exposure&lt;/li&gt;
&lt;li&gt;Missing Function Level Access Control&lt;/li&gt;
&lt;li&gt;Cross-Site Request Forgeries&lt;/li&gt;
&lt;li&gt;Using Components With Known Vulnerabilities&lt;/li&gt;
&lt;li&gt;Unvalidated Redirects and Forwards&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The most common type of web application attack is &lt;a href=&#34;#sql-injection&#34;&gt;SQL Injection&lt;/a&gt; - where someone submits SQL commands through a pages&amp;rsquo; form fields, attempting to perform admin-level actions to the connected database.&lt;/p&gt;

&lt;p&gt;These attacks are common, but can be quite destructive if successful, resulting in data breaches or embedding malicious scripts in your website that can attack users who visit it.&lt;/p&gt;

&lt;h2 id=&#34;risk-levels:6d4e9e6b78bce2650cc52d867108cb51&#34;&gt;Risk Levels&lt;/h2&gt;

&lt;table class=&#34;risk&#34;&gt;

&lt;tbody&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Event&lt;/strong&gt;&lt;/td&gt;

&lt;td&gt;A failed attack was detected - normally bot activity on your server&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Attack&lt;/strong&gt;&lt;/td&gt;

&lt;td&gt;A series of failed attacks failed injection attacks were detected&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Incident&lt;/strong&gt;&lt;/td&gt;

&lt;td&gt;A successful attack was detected - a security breach has occurred!&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;

&lt;h2 id=&#34;recommendations:6d4e9e6b78bce2650cc52d867108cb51&#34;&gt;Recommendations&lt;/h2&gt;

&lt;p&gt;If an Incident or Attack level &lt;em&gt;web app attack&lt;/em&gt; is detected, we recommend you take immediate action to block the source of the attack, as per the in-app Alert instructions. &lt;/p&gt;

&lt;p&gt;In the longer term, it&amp;rsquo;s important to be aware of the risks and prepare accordingly - testing your app for any vulnerabilities that an attacker could exploit (e.g. forms that are open to Cross-Site Scripting or SQL Injection techniques). &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Secure Your Forms&lt;/strong&gt;&lt;br /&gt;
The best way to safeguard against these types of attacks in the longer term is to understand how these attacks operate, and take preventative measures to ensure your code doesn&amp;rsquo;t offer any vulnerable attack points to would-be-attackers.&lt;/p&gt;

&lt;p&gt;Developers should use validation techniques such as &lt;a href=&#34;https://en.wikipedia.org/wiki/SQL_injection#Mitigation&#34;&gt;parameterized statements, escaping and pattern checking&lt;/a&gt; to build forms that cannot be exploited through SQL Injection.&lt;/p&gt;

&lt;p&gt;Related links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#sql-injection&#34;&gt;SQL Injection Attack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#xss&#34;&gt;Cross-Site Scripting Attacks (XSS)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Added Agent Admin Page</title>
      <link>http://localhost:1313/agent-admin-page</link>
      <pubDate>Thu, 02 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/agent-admin-page</guid>
      <description>

&lt;p&gt;We&amp;rsquo;ve added a new admin section to the Barricade app: &lt;a href=&#34;https://app.barricade.io/agents&#34;&gt;app.barricade.io/agents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This section allows you to see what Agents are running, how busy they are and how to control them (stop, start, etc).&lt;/p&gt;

&lt;p&gt;[IMG]&lt;/p&gt;

&lt;h3 id=&#34;agent-controls:0296e37855114436a18e6976efcf3577&#34;&gt;Agent Controls&lt;/h3&gt;

&lt;p&gt;You can stop and start the agent by running commands on your server - this new Agent section provides instructions on how to do this - see our &lt;a href=&#34;LINK NEEDED&#34;&gt;Agent documentation&lt;/a&gt; for more details.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;service barricade start  
service barricade stop  
service barricade status  
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Updated AI Engine</title>
      <link>http://localhost:1313/updated-ai-engine</link>
      <pubDate>Fri, 10 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/updated-ai-engine</guid>
      <description>&lt;p&gt;We&amp;rsquo;ve shipped an update to our A.I. engine, to improve the detection accuracy and reduce noise - so you should see less, but more relevant data than before.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;re working constantly on the engine to ensure the best results for our customers. If you&amp;rsquo;re seeing any data you&amp;rsquo;re not sure about - do let us know.&lt;/p&gt;

&lt;p&gt;[IMG]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SQL Injection</title>
      <link>http://localhost:1313/security-guide/sql-injection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/security-guide/sql-injection/</guid>
      <description>

&lt;p&gt;Barricade monitors for SQL Injection attacks on your application - suspicious web form activity is examined in real-time and Alerts sent if an attack is detected.  &lt;/p&gt;

&lt;h2 id=&#34;causes:e1b0a7b80dcc638ec866ac29b27d6ca9&#34;&gt;Causes&lt;/h2&gt;

&lt;p&gt;Web forms are often targetted by attackers as they seek out vulnerable systems to access. The most common technique used in such attacks is SQL Injection - where someone submits SQL commands through a pages&amp;rsquo; form fields, attempting to perform admin-level actions to the connected database.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.barricade.io/sql-injection-attacks-visually-explained/&#34;&gt;See our infographic for a visual explanation of SQL Injection attacks &amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.barricade.io/sql-injection-attacks-visually-explained/&#34;&gt;&lt;img src=&#34;../src/img/security-guide/sqlinjection-thumbnail-home-750.png&#34; alt=&#34;../src/img/security-guide/sqlinjection-thumbnail-home-750.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These attacks are common, and can be quite destructive - if successful, an attacker can interact with your database and steal or even erase sensitive data.&lt;/p&gt;

&lt;h2 id=&#34;risk-levels:e1b0a7b80dcc638ec866ac29b27d6ca9&#34;&gt;Risk Levels&lt;/h2&gt;

&lt;table class=&#34;risk&#34;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Event&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;A failed SQL Injection attack was detected&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Attack&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Multiple failed injection attacks were detected&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Incident&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;A successful SQL Injection attack occurred - possible security breach&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;recommendations:e1b0a7b80dcc638ec866ac29b27d6ca9&#34;&gt;Recommendations&lt;/h2&gt;

&lt;p&gt;If SQL Injection attacks are detected, we recommend you take immediate action to block the source of the attack, as per the in-app &lt;a href=&#34;https://app.barricade.io/alert&#34;&gt;Alert instructions&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;In the longer term, it&amp;rsquo;s important to be aware of the risks and prepare accordingly - testing your app for any vulnerabilites that an injection attack could exploit. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Secure Your Forms&lt;/strong&gt;&lt;br /&gt;
The best way to safeguard against SQL Injection attacks in the longer term is to understand how these attacks work, and take preventative measures to ensure your code doesn&amp;rsquo;t offer any vulnerable attack points to would-be-attackers.&lt;/p&gt;

&lt;p&gt;Developers should use validation techniques such as &lt;a href=&#34;https://en.wikipedia.org/wiki/SQL_injection#Mitigation&#34;&gt;parameterized statements, escaping and pattern checking&lt;/a&gt; to build forms that cannot be exploited through SQL Injection.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Database Backups&lt;/strong&gt;&lt;br /&gt;
SQL Injection is just one of many techniques that can pose a threat to you and your data. It&amp;rsquo;s important to capture and securely store database backups to reduce the potential risk of a successful attack. &lt;/p&gt;

&lt;p&gt;Related links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#blocking-ip-address&#34;&gt;Blocking Attacker IP Addresses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#securing-web-forms&#34;&gt;Removing Vulnerabilities in Forms&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Added Teams - Invite &amp; Manage Users</title>
      <link>http://localhost:1313/added-teams</link>
      <pubDate>Fri, 10 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/added-teams</guid>
      <description>&lt;p&gt;We&amp;rsquo;ve added the ability to invite and manage users to a team account, so you can grant &lt;strong&gt;read-only access&lt;/strong&gt; to your colleagues.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../src/img/changelog/04-team-invites.gif.png&#34; alt=&#34;../src/img/changelog/04-team-invites.gif&#34; /&gt;&lt;/p&gt;

&lt;p&gt;For more information on using this feature, see our guide to &lt;a href=&#34;../../using-barricade/&#34;&gt;Adding Team Members&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cross-Site Scripting</title>
      <link>http://localhost:1313/security-guide/xss/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/security-guide/xss/</guid>
      <description>

&lt;p&gt;Barricade monitors for Cross-Site Scripting attacks on your application - suspicious web form activity is examined in real-time and Alerts sent if an attack is detected.  &lt;/p&gt;

&lt;h2 id=&#34;causes:28b5a5504725bb25df95cbcb50cdc6a9&#34;&gt;Causes&lt;/h2&gt;

&lt;p&gt;Cross-Site Scripting is a common method used by attackers as they seek vulnerable systems to access. These &amp;lsquo;XSS&amp;rsquo; attacks involve submitting web forms with scripts and commands inserted into the input fields; in an effort to upload and embed scripts into someone&amp;rsquo;s website or app.&lt;/p&gt;

&lt;p&gt;When successful, these scripts can be used to attack other visitors, who unknowingly load the script when they visit the infected webpage or app. Comment forms and media uploaders are often targetted by these kinds of attacks - the scripts used range in size and purpose, but have the potential to be quite destructive if successful.&lt;/p&gt;

&lt;h2 id=&#34;risk-levels:28b5a5504725bb25df95cbcb50cdc6a9&#34;&gt;Risk Levels&lt;/h2&gt;

&lt;table class=&#34;risk&#34;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Event&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;A failed XSS attack was detected&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Attack&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Multiple failed XSS attacks were detected&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Incident&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;A successful XSS attack occurred - possible security breach&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;recommendations:28b5a5504725bb25df95cbcb50cdc6a9&#34;&gt;Recommendations&lt;/h2&gt;

&lt;p&gt;If Cross-Site Scripting attacks are detected, we recommend you take immediate action to block the source of the attack, as per the in-app &lt;a href=&#34;https://app.barricade.io/alert&#34;&gt;Alert instructions&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;In the longer term, it&amp;rsquo;s important to be aware of the risks and prepare accordingly - testing your app for any vulnerabilites that an injection attack could exploit. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Securing Your Forms&lt;/strong&gt;&lt;br /&gt;
The best way to safeguard against XSS attacks in the long term is to understand how these attacks work, and take preventative measures to ensure your code doesn&amp;rsquo;t offer any vulnerable attack points to would-be-attackers.&lt;/p&gt;

&lt;p&gt;Developers should ensure to &lt;a href=&#34;https://en.wikipedia.org/wiki/Cross-site_scripting#Reducing_the_threat&#34;&gt;properly escape and validate form field inputs&lt;/a&gt; to remove the possibility of exploits. It&amp;rsquo;s also a good idea to testing your app for vulnerabilities on a regular basis, to find and reinforce any points of weakness.&lt;/p&gt;

&lt;p&gt;Related links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#blocking-ip-address&#34;&gt;Blocking Attacker IP Addresses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#secure-web-forms&#34;&gt;Removing Vulnerabilities in Forms&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Added Slack Integration</title>
      <link>http://localhost:1313/slack-integration</link>
      <pubDate>Fri, 10 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/slack-integration</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../../using-barricade/#slack&#34;&gt;Slack&lt;/a&gt; is a real-time messaging app for teams that allows you to communicate quickly and easily. We use Slack everyday at Barricade; to communicate and to share security notifications - and now you can too!&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../../src/img/changelog/05-slack-logo.png&#34; alt=&#34;../../src/img/changelog/05-slack-logo.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You can integrate Slack with Barricade to share security notifications with you team:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../../src/img/changelog/05-slack-message.png&#34; alt=&#34;../../src/img/changelog/05-slack-message.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;For more information on using this feature, see our guide to &lt;a href=&#34;../../using-barricade/#slack&#34;&gt;Integrating with Slack&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>http://localhost:1313/getting-started/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/getting-started/overview/</guid>
      <description>&lt;p&gt;&lt;div class=&#34;video-container&#34;&gt;
&lt;iframe class=&#34;youtube-player&#34; type=&#34;text/html&#34; width=&#34;100%&#34; height=&#34;auto&#34; src=&#34;https://www.youtube.com/embed/ukTAg2ecO8g&#34; allowfullscreen frameborder=&#34;0&#34;&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Barricade collects data from your server with an &lt;strong&gt;Agent&lt;/strong&gt; - a simple, lightweight package that watches all network activity on your cloud server.&lt;/p&gt;

&lt;p&gt;This data is encrypted and processed through Barricades&amp;rsquo; central detection &lt;strong&gt;Engine&lt;/strong&gt;, and findings are displayed in real-time in your dashboard and notification channels.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../src/img/getting-started/agent-chart-sm.png&#34; alt=&#34;../src/img/getting-started/agent-chart-sm.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Barricade&amp;rsquo;s Collection Workflow - gathering, processing and alerting (&lt;a href=&#34;../src/img/getting-started/agent-chart-lg.png&#34;&gt;open in full-size&lt;/a&gt;).&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Default Username Attempts</title>
      <link>http://localhost:1313/security-guide/login-default-username/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/security-guide/login-default-username/</guid>
      <description>

&lt;p&gt;Barricade monitors for suspicious login attempts on your servers, including attacks that attempt to gain access through common, default credentials.&lt;/p&gt;

&lt;h2 id=&#34;causes:69e8a17692cf3f3f17278939bf4b859a&#34;&gt;Causes&lt;/h2&gt;

&lt;p&gt;Login forms are commonly targeted by automated bots, as they seek out ways to access vulnerable servers. Default, out-of-the-box usernames like ‘administrator’ make it much easier for attackers to hone in on your login information, and reduce the time needed to run &lt;a href=&#34;http://en.wikipedia.org/wiki/Brute-force_attack&#34;&gt;Brute Force&lt;/a&gt; password attacks.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;admin  
administrator  
root  
temp  
User  
DBA
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Some examples from &lt;a href=&#34;http://defaultpassword.com&#34;&gt;defaultpassword.com&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;risk-levels:69e8a17692cf3f3f17278939bf4b859a&#34;&gt;Risk Levels&lt;/h2&gt;

&lt;table class=&#34;risk&#34;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Event&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Single failed login attempt using default credentials&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Attack&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Multiple failed login attempts using default credentials&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Incident&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Successful login using default credentials - possible security breach&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;recommendations:69e8a17692cf3f3f17278939bf4b859a&#34;&gt;Recommendations&lt;/h2&gt;

&lt;p&gt;If a suspicious login attempt is detected, it’s likely that additional attempts will follow. We advise blocking the attacker’s IP address, via the &lt;a href=&#34;https://app.barricade.io/dashboard/alerts&#34;&gt;Alert instructions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the longer term, you can safeguard against these types of attacks by following best practices:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remove &amp;lsquo;Default&amp;rsquo; Logins from your app&lt;/li&gt;
&lt;li&gt;Create and implementing a strong password policy&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Suspicious Login Attempts</title>
      <link>http://localhost:1313/security-guide/login-suspicious-username/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/security-guide/login-suspicious-username/</guid>
      <description>

&lt;p&gt;Barricade monitors for suspicious login attempts on your servers, including any activity where non-existent or blocked usernames are used to try and gain access.&lt;/p&gt;

&lt;h2 id=&#34;causes:4ca36353a6f3c6800fdfab63af7f15d8&#34;&gt;Causes&lt;/h2&gt;

&lt;p&gt;Login forms are commonly targeted by automated bots, as they seek out ways to access vulnerable servers. When certain behavioural patterns are observed, our engine will treat a username as suspicious and create the activity will be reported as a new case.&lt;/p&gt;

&lt;p&gt;A username is treated as suspicious when: &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;username does not exist  
username has been blocked/locked out  
username has made many failed login attempts  
username has failed activity from multiple IP addresses at once
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;risk-levels:4ca36353a6f3c6800fdfab63af7f15d8&#34;&gt;Risk Levels&lt;/h2&gt;

&lt;table class=&#34;risk&#34;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Event&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Single failed login attempt using suspicious credentials&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Attack&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Multiple failed login attempts using suspicious credentials&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Incident&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Successful login using suspicious credentials - possible security breach&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;recommendations:4ca36353a6f3c6800fdfab63af7f15d8&#34;&gt;Recommendations&lt;/h2&gt;

&lt;p&gt;If a suspicious login attempt is detected, it’s likely that additional attempts will follow. We advise blocking the attacker’s IP address, via the &lt;a href=&#34;https://app.barricade.io/dashboard/alerts&#34;&gt;Alert instructions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the longer term, you can safeguard against these types of attacks by following best practices:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remove &amp;lsquo;Default&amp;rsquo; Logins from your app&lt;/li&gt;
&lt;li&gt;Create and implementing a strong password policy&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Security Rating System</title>
      <link>http://localhost:1313/using-barricade/security-rating-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/using-barricade/security-rating-system/</guid>
      <description>

&lt;p&gt;Our security rating system is made to be simple by design, so that anyone can understand what is happening on their infrastructure regardless of their level of security knowledge or position.&lt;/p&gt;

&lt;h2 id=&#34;ratings:159124d2da0896f1a39f7f69d4d3aeba&#34;&gt;Ratings&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;../src/img/using-barricade/ranking.png&#34; alt=&#34;../src/img/using-barricade/ranking.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We have split security threats into Events, Attacks and Incidents. We track events, flag attacks, monitor their progress and alert you when they become incidents.&lt;/p&gt;

&lt;table class=&#34;risk&#34;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Event&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Someone tried and failed to attack your app &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Attack&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Someone makes multiple failed attack attempts &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Incident&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;An attacker succeeds in their attack - your system is breached&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>How Agents Work</title>
      <link>http://localhost:1313/getting-started/how-it-works-agent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/getting-started/how-it-works-agent/</guid>
      <description>

&lt;p&gt;Agents quietly monitor, without getting in the way or impacting on your server resources. There is no need for any code or configuration changes to your app.&lt;/p&gt;

&lt;p&gt;Data is gathered, encrypted and sent from the agent to the Barricade platform engine; where it’s immediately analyzed for any suspicious activity - detecting web app attacks, data breaches or intrusion attempts on your server.&lt;/p&gt;

&lt;h2 id=&#34;lightweight-agent:9d5d196026c9b7320d8721a95f202636&#34;&gt;Lightweight Agent&lt;/h2&gt;

&lt;p&gt;The agent sits quietly on your server and keeps an eye on things - the heavy data analysis processes are carried out by our platform’s engine - to ensure your performance isn’t affected.&lt;/p&gt;

&lt;p&gt;Our design ensures that the agent does &lt;strong&gt;not&lt;/strong&gt; -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Get in the way&lt;/strong&gt;:&lt;br /&gt;
the agent monitors and collects data, it will not block any traffic on your application&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Slow down your server&lt;/strong&gt;:&lt;br /&gt;
the agent focuses on lightweight tasks; formatting and transmitting data to our engine.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Expose your data&lt;/strong&gt;:&lt;br /&gt;
all transmitted information is encrypted with 2048-bit SSL&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;one-way-agent:9d5d196026c9b7320d8721a95f202636&#34;&gt;One-Way Agent&lt;/h2&gt;

&lt;p&gt;Don’t worry - Barricade can’t connect to your server and execute commands. By design, the agent communicates out but Barricade can never communicate in.&lt;/p&gt;

&lt;h2 id=&#34;installation:9d5d196026c9b7320d8721a95f202636&#34;&gt;Installation&lt;/h2&gt;

&lt;p&gt;The Agent is installed via a one touch command, which fetches the code, verifies the package signature and installs the agent on your server. For step-by-step installation instructions see the &lt;a href=&#34;#installing-an-agent&#34;&gt;Installing an Agent&lt;/a&gt; guide.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Adding Team Members</title>
      <link>http://localhost:1313/using-barricade/adding-team-members/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/using-barricade/adding-team-members/</guid>
      <description>

&lt;p&gt;You can invite colleagues to join your Barricade team account, granting access to your Agents and their findings from your servers.&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;ll find the Team controls in the Settings &amp;gt; Team &amp;gt; &lt;a href=&#34;https://app.barricade.io/dashboard/settings/team/members&#34;&gt;Members&lt;/a&gt; page.&lt;/p&gt;

&lt;h3 id=&#34;team-permissions:639f3153471e5042a626a354e5707952&#34;&gt;Team Permissions&lt;/h3&gt;

&lt;p&gt;Teams are comprised of a single Admin user (the person who originally created the account) and Members, who have most of the same permissions - except when it comes to billing and being able to remove other users from the account.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s a breakdown of the permissions per role:&lt;/p&gt;

&lt;table class=&#34;compare&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th&gt; &lt;/th&gt;&lt;th&gt;&lt;strong&gt;Admin&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;Member&lt;/strong&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Install Agents:&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Edit Agents:&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;View Cases:&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mark Cases as Resolved:&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Invite Team Members:&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Remove Team Members:&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-close&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Manage Team Notifcations:&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Manage Team Integrations:&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;View &amp;amp; Edit Billing Details:&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-close&#34;&gt; &lt;/em&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;your-team:639f3153471e5042a626a354e5707952&#34;&gt;Your Team&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;https://app.barricade.io/dashboard/settings/team/profile&#34;&gt;team profile page&lt;/a&gt; allows you to edit your team name. Only the admin can change the name of a team.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../src/img/using-barricade/11-team-01.png&#34; alt=&#34;../src/img/using-barricade/11-team-01.png&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;how-to-invite-members:639f3153471e5042a626a354e5707952&#34;&gt;How to Invite Members&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;https://app.barricade.io/dashboard/settings/team/invitations&#34;&gt;invitations&lt;/a&gt; page lets you add new members via email address: &lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../src/img/using-barricade/11-team-02.gif&#34; alt=&#34;../src/img/using-barricade/11-team-02.gif&#34; /&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Enter the email address and click the Invite button.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The page will show that an email invite has been issued.
You can revoke any unaccepted invitations by clicking the &amp;lsquo;X&amp;rsquo; on the right:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../src/img/using-barricade/11-team-03.png&#34; alt=&#34;../src/img/using-barricade/11-team-03.png&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The new member will receive a confirmation email with an activation link:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../src/img/using-barricade/11-team-04.png&#34; alt=&#34;../src/img/using-barricade/11-team-04.png&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Once activated, they can login and will have read-access to information from your Agents&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;how-to-remove-members:639f3153471e5042a626a354e5707952&#34;&gt;How to Remove Members&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;../src/img/using-barricade/11-team-05.gif&#34; alt=&#34;../src/img/using-barricade/11-team-05.gif&#34; /&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;To remove members you must be logged in as the Team Admin&lt;/li&gt;
&lt;li&gt;Visit the app &lt;a href=&#34;https://app.barricade.io/dashboard/settings/team/members&#34;&gt;Team page&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Click the &amp;lsquo;X&amp;rsquo; icon to the right of the member name &lt;/li&gt;
&lt;li&gt;Confirm removal of that member&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>